<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->
<template xmlns="http://ws.apache.org/ns/synapse" name="removePermission">
    <parameter name="functionName" description="The name of the function."/>
    <parameter name="permissionStatementId" description="Statement Id of the permission to remove"/>
    <parameter name="permissionQualifier" description="Specify a version/alias to remove permissions from a published
        version of the function."/>
    <parameter name="permissionRevisionId" description="To update the policy if the revision ID matched the ID
        specified"/>
    <parameter name="apiVersionRemovePermission" description="API version used for RemovePermission method."/>
    <parameter name="responseVariable" description="The name of the variable to which the response should be stored."/>
    <parameter name="overwriteBody" description="Replace the Message Body in Message Context with the response of the operation."/>
    <sequence>
        <property name="uri.var.functionName" expression="$func:functionName"/>
        <property name="uri.var.statementId" expression="$func:permissionStatementId"/>
        <property name="uri.var.qualifier" expression="$func:permissionQualifier"/>
        <property name="uri.var.revisionId" expression="$func:permissionRevisionId"/>
        <property name="uri.var.apiVersion" expression="$func:apiVersionRemovePermission"/>
        <property name="httpMethod" value="DELETE"/>
        <property name="uri.var.uriRemainder" expression="fn:concat('/', $ctx:uri.var.apiVersion, '/functions/',
            $ctx:uri.var.functionName, '/policy/', $ctx:uri.var.statementId)"/>
        <script language="js">
            <![CDATA[
                var queryParameters = '';
                var qualifier = mc.getProperty('uri.var.qualifier');
                var revisionId = mc.getProperty('uri.var.revisionId');
                if (qualifier != null && qualifier != "") {
                    queryParameters = queryParameters + "Qualifier=" + encodeURIComponent(qualifier) + '&';
                }
                if (revisionId != null && revisionId != "") {
                    queryParameters = queryParameters + "RevisionId=" + encodeURIComponent(revisionId) + '&';
                }
                 if (queryParameters != "") {
                    queryParameters = String(queryParameters);
                    queryParameters = '?' + queryParameters.substring(0, queryParameters.length - 1);
                }
                mc.setProperty('uri.var.queryParameter', queryParameters.toString());
            ]]>
        </script>
        <class name="org.wso2.carbon.esb.connector.auth.AmazonLambdaAuthConnector"/>
        <header name="Authorization" scope="transport" expression="$ctx:authorizationHeader"/>
        <header name="X-Amz-Date" scope="transport" expression="$ctx:x-amz-date"/>
        <property name="NO_ENTITY_BODY" value="true" scope="axis2" type="BOOLEAN"/>
        <filter source="$ctx:amazonLambdaBlocking" regex="true">
            <then>
                <call blocking="true">
                    <endpoint>
                        <http method="DELETE"
                              uri-template="{uri.var.apiUrl}{+uri.var.uriRemainder}{+uri.var.queryParameter}"/>
                    </endpoint>
                </call>
            </then>
            <else>
                <call>
                    <endpoint>
                        <http method="DELETE"
                              uri-template="{uri.var.apiUrl}{+uri.var.uriRemainder}{+uri.var.queryParameter}"/>
                    </endpoint>
                </call>
            </else>
        </filter>
    </sequence>
</template>
